#shader vertex
#version 400 core

layout (location = 0) in vec2 in_position;
layout (location = 1) in vec2 in_texCoords;

out vec2 pass_texCoords;

uniform vec2 translation;

void main(void) {
    gl_Position = vec4(in_position + translation * vec2(2.0, -2.0), 0.0, 1.0);
    pass_texCoords = in_texCoords;
}

#shader fragment
#version 400 core

in vec2 pass_texCoords;

out vec4 out_colour;

uniform vec3 colour;
uniform sampler2D fontAtlas;

const float width = 0.5;
const float edge = 0.1;

const float borderWidth = 0.4;
const float borderEdge = 0.5;

const vec2 offset = vec2(0.006, 0.006);

const vec3 outlineColour = vec3(1.0, 0.0, 0.0);

void main(void) {
    float distance = 1.0 - texture(fontAtlas, pass_texCoords).a;
    float alpha = 1.0 - smoothstep(width, width + edge, distance);

    float distance2 = 1.0 - texture(fontAtlas, pass_texCoords + offset).a;
    float outlineAlpha = 1.0 - smoothstep(borderWidth, borderWidth + borderEdge, distance2);

    float overallAlpha = alpha + (1.0 - alpha) * outlineAlpha;
    vec3 overallColour = mix(outlineColour, colour, alpha / overallAlpha);

    out_colour = vec4(overallColour, overallAlpha);
}
















