#shader vertex
#version 400 core

layout (location = 0) in vec2 in_position;
layout (location = 1) in mat4 in_mvMat;
layout (location = 5) in vec4 texOffsets;
layout (location = 6) in float blendFactor;

out vec2 pass_texCoords1;
out vec2 pass_texCoords2;
out float pass_blend;

uniform mat4 projMat;
uniform float numberOfRows;

void main(void) {
    vec2 texCoords = in_position + vec2(0.5, 0.5);
    texCoords.y = 1.0 - texCoords.y;
    texCoords /= numberOfRows;
    pass_texCoords1 = texCoords + texOffsets.xy;
    pass_texCoords2 = texCoords + texOffsets.zw;
    pass_blend = blendFactor;

    gl_Position = projMat * in_mvMat * vec4(in_position, 0.0, 1.0);
}

#shader fragment
#version 400 core

in vec2 pass_texCoords1;
in vec2 pass_texCoords2;
in float pass_blend;

out vec4 out_colour;

uniform sampler2D particleTexture;

void main(void) {
    vec4 colour1 = texture(particleTexture, pass_texCoords1);
    vec4 colour2 = texture(particleTexture, pass_texCoords2);

    out_colour = mix(colour1, colour2, pass_blend);

    if(out_colour.a < 0.5) discard;

}